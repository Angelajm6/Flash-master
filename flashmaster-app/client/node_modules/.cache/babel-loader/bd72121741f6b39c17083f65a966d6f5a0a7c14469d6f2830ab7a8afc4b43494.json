{"ast":null,"code":"var _jsxFileName = \"/Users/community/Flash-master/flashmaster-app/client/src/pages/UserPortal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Flash from '../components/FlashCard/index';\nimport { QUERY_SINGLE_USER } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserPortal(_ref) {\n  _s();\n  var _portal$flashDecks;\n  let {\n    history\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const {\n    data,\n    loading\n  } = useQuery(userId ? QUERY_SINGLE_USER : {});\n  const portal = (data === null || data === void 0 ? void 0 : data.user) || (data === null || data === void 0 ? void 0 : data.portal) || {};\n  useEffect(() => {\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n      history.push('/user');\n    }\n  }, [userId, history]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (!(portal !== null && portal !== void 0 && portal.name)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see your portal page. Use the navigation links above to sign up or log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-header\",\n      children: [userId ? `${portal.name}'s` : 'Your', \" collection of flash card decks:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), ((_portal$flashDecks = portal.flashDecks) === null || _portal$flashDecks === void 0 ? void 0 : _portal$flashDecks.length) > 0 && /*#__PURE__*/_jsxDEV(Flash, {\n      flashDecks: portal.flashDecks,\n      ifLoggedInUser: !userId && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(UserPortal, \"U07hXjOd8Ss1kIiINduDF3sKdy4=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = UserPortal;\nvar _c;\n$RefreshReg$(_c, \"UserPortal\");","map":{"version":3,"names":["React","useEffect","Navigate","useParams","useQuery","Flash","QUERY_SINGLE_USER","Auth","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPortal","_ref","_s","_portal$flashDecks","history","userId","data","loading","portal","user","loggedIn","getProfile","_id","push","children","fileName","_jsxFileName","lineNumber","columnNumber","name","className","flashDecks","length","ifLoggedInUser","_c","$RefreshReg$"],"sources":["/Users/community/Flash-master/flashmaster-app/client/src/pages/UserPortal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Flash from '../components/FlashCard/index';\nimport { QUERY_SINGLE_USER } from '../utils/queries';\nimport Auth from '../utils/auth';\n\nexport default function UserPortal({ history }) {\n  const { userId } = useParams();\n\n  const { data, loading } = useQuery(userId ? QUERY_SINGLE_USER : {});\n\n  const portal = data?.user || data?.portal || {};\n\n  useEffect(() => {\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n      history.push('/user');\n    }\n  }, [userId, history]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!portal?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your portal page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <>\n      <h2 className=\"card-header\">\n        {userId ? `${portal.name}'s` : 'Your'} collection of flash card decks:\n      </h2>\n\n      {portal.flashDecks?.length > 0 && (\n        <Flash flashDecks={portal.flashDecks} ifLoggedInUser={!userId && true} />\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AACtD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,KAAK,MAAM,+BAA+B;AACjD,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,OAAOC,IAAI,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAC5C,MAAM;IAAEI;EAAO,CAAC,GAAGd,SAAS,CAAC,CAAC;EAE9B,MAAM;IAAEe,IAAI;IAAEC;EAAQ,CAAC,GAAGf,QAAQ,CAACa,MAAM,GAAGX,iBAAiB,GAAG,CAAC,CAAC,CAAC;EAEnE,MAAMc,MAAM,GAAG,CAAAF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,IAAI,MAAIH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,KAAI,CAAC,CAAC;EAE/CnB,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,CAACe,QAAQ,CAAC,CAAC,IAAIf,IAAI,CAACgB,UAAU,CAAC,CAAC,CAACL,IAAI,CAACM,GAAG,KAAKP,MAAM,EAAE;MAC5DD,OAAO,CAACS,IAAI,CAAC,OAAO,CAAC;IACvB;EACF,CAAC,EAAE,CAACR,MAAM,EAAED,OAAO,CAAC,CAAC;EAErB,IAAIG,OAAO,EAAE;IACX,oBAAOV,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,EAACV,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEW,IAAI,GAAE;IACjB,oBACEtB,OAAA;MAAAiB,QAAA,EAAI;IAGJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAET;EAEA,oBACErB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAIuB,SAAS,EAAC,aAAa;MAAAN,QAAA,GACxBT,MAAM,GAAI,GAAEG,MAAM,CAACW,IAAK,IAAG,GAAG,MAAM,EAAC,kCACxC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEJ,EAAAf,kBAAA,GAAAK,MAAM,CAACa,UAAU,cAAAlB,kBAAA,uBAAjBA,kBAAA,CAAmBmB,MAAM,IAAG,CAAC,iBAC5BzB,OAAA,CAACJ,KAAK;MAAC4B,UAAU,EAAEb,MAAM,CAACa,UAAW;MAACE,cAAc,EAAE,CAAClB,MAAM,IAAI;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzE;EAAA,eACD,CAAC;AAEP;AAAChB,EAAA,CArCuBF,UAAU;EAAA,QACbT,SAAS,EAEFC,QAAQ;AAAA;AAAAgC,EAAA,GAHZxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}