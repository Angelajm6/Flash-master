{"ast":null,"code":"var _jsxFileName = \"/Users/community/Flash-master/flashmaster-app/client/src/components/searchComponent/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_SINGLE_USER } from '../../utils/queries';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Searchbar = () => {\n  _s();\n  const [search, setSearch] = useState('');\n  const [searchedResults, setSearchedResults] = useState([]);\n  const [searchSingleUser, {\n    loading,\n    data\n  }] = useLazyQuery(QUERY_SINGLE_USER);\n  const handleSearch = e => {\n    e.preventDefault();\n    searchSingleUser({\n      variables: {\n        userID: search\n      },\n      onCompleted: data => {\n        setSearchedResults(data.users);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search For A User\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchedResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchedResults.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/users/${result._id}`,\n            children: result.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this)\n        }, result._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this) : search && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), !search && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please Enter A User Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Searchbar, \"Bmcp3U9ZHnBF3i34+pmaBjOBxGk=\", false, function () {\n  return [useLazyQuery];\n});\n_c = Searchbar;\nexport default Searchbar;\nvar _c;\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"names":["React","useState","useLazyQuery","QUERY_SINGLE_USER","Link","jsxDEV","_jsxDEV","Searchbar","_s","search","setSearch","searchedResults","setSearchedResults","searchSingleUser","loading","data","handleSearch","e","preventDefault","variables","userID","onCompleted","users","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","result","to","_id","username","_c","$RefreshReg$"],"sources":["/Users/community/Flash-master/flashmaster-app/client/src/components/searchComponent/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_SINGLE_USER } from '../../utils/queries';\nimport { Link } from 'react-router-dom';\n\nconst Searchbar = () => {\n    const [search, setSearch] = useState('');\n    const [searchedResults, setSearchedResults] = useState([]);\n    const [searchSingleUser, { loading, data }] = useLazyQuery(QUERY_SINGLE_USER);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        searchSingleUser({\n            variables: { userID: search },\n            onCompleted: (data) => {\n                setSearchedResults(data.users);\n            }\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSearch}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search For A User\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            {loading ? (\n                <div>Loading...</div>\n            ) : (\n                <ul>\n                    {searchedResults.length > 0 ? (\n                        <ul>\n                            {searchedResults.map((result) => (\n                                <li key={result._id}>\n                                    <Link to={`/users/${result._id}`}>\n                                        {result.username}\n                                    </Link> \n                                </li>\n                            ))}\n                        </ul>\n                    ) : search && (\n                        <div>No results found.</div>\n                    )}\n                </ul>\n            )}\n            {!search && (\n                <div>Please Enter A User Name</div>\n            )}\n        </div>\n    );\n};\n\nexport default Searchbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}