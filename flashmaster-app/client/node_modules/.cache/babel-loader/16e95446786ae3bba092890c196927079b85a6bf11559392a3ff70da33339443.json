{"ast":null,"code":"var _jsxFileName = \"/Users/community/Flash-master/flashmaster-app/client/src/components/FlashCard/FlashCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './FlashCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlashCard(_ref) {\n  _s();\n  let {\n    flashcard\n  } = _ref;\n  // Sets default status to !flip to show question first.\n  const [flip, setFlip] = useState(false);\n  // Sets initial height of flashcard\n  const [height, setHeight] = useState('initial');\n  const frontEl = useRef();\n  const backEl = useRef();\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 300));\n  }\n  // Changes max height based on any changes to questions or answers on the flashcards\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flip ? 'flip' : ''}`,\n    style: {\n      height: height\n    },\n    onClick: () => setFlip(!flip),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"front\",\n      ref: frontEl,\n      children: flashcard.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      ref: backEl,\n      children: flashcard.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCard, \"qfG400B5FHOE/tWxRI+kaoxtmzk=\");\n_c = FlashCard;\nvar _c;\n$RefreshReg$(_c, \"FlashCard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","FlashCard","_ref","_s","flashcard","flip","setFlip","height","setHeight","frontEl","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","question","answer","window","addEventListener","removeEventListener","className","style","onClick","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/community/Flash-master/flashmaster-app/client/src/components/FlashCard/FlashCard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './FlashCard.css';\n\nexport default function FlashCard({ flashcard }) {\n    // Sets default status to !flip to show question first.\n    const [flip, setFlip] = useState(false)\n    // Sets initial height of flashcard\n    const [height, setHeight] = useState('initial')\n\n    const frontEl = useRef()\n    const backEl = useRef()\n\n    function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n        setHeight(Math.max(frontHeight, backHeight, 300))\n\n    }\n    // Changes max height based on any changes to questions or answers on the flashcards\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer])\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n  return (\n    <div \n        className={ `card ${flip ? 'flip' : ''}`}\n        style={{ height: height }}\n        onClick={() => setFlip(!flip)}\n    >\n        <div className=\"front\" ref={frontEl}>\n            {flashcard.question}\n        </div>\n        <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n\n      \n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC3C;EACA,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvC;EACA,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EAE/C,MAAMa,OAAO,GAAGX,MAAM,CAAC,CAAC;EACxB,MAAMY,MAAM,GAAGZ,MAAM,CAAC,CAAC;EAEvB,SAASa,YAAYA,CAAA,EAAG;IACpB,MAAMC,WAAW,GAAGH,OAAO,CAACI,OAAO,CAACC,qBAAqB,CAAC,CAAC,CAACP,MAAM;IAClE,MAAMQ,UAAU,GAAGL,MAAM,CAACG,OAAO,CAACC,qBAAqB,CAAC,CAAC,CAACP,MAAM;IAChEC,SAAS,CAACQ,IAAI,CAACC,GAAG,CAACL,WAAW,EAAEG,UAAU,EAAE,GAAG,CAAC,CAAC;EAErD;EACA;EACAlB,SAAS,CAACc,YAAY,EAAE,CAACP,SAAS,CAACc,QAAQ,EAAEd,SAAS,CAACe,MAAM,CAAC,CAAC;EAC/DtB,SAAS,CAAC,MAAM;IACZuB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEV,YAAY,CAAC;IAC/C,OAAO,MAAMS,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEX,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAER,oBACEX,OAAA;IACIuB,SAAS,EAAI,QAAOlB,IAAI,GAAG,MAAM,GAAG,EAAG,EAAE;IACzCmB,KAAK,EAAE;MAAEjB,MAAM,EAAEA;IAAO,CAAE;IAC1BkB,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAAC,CAACD,IAAI,CAAE;IAAAqB,QAAA,gBAE9B1B,OAAA;MAAKuB,SAAS,EAAC,OAAO;MAACI,GAAG,EAAElB,OAAQ;MAAAiB,QAAA,EAC/BtB,SAAS,CAACc;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACN/B,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAACI,GAAG,EAAEjB,MAAO;MAAAgB,QAAA,EAAEtB,SAAS,CAACe;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1D,CAAC;AAEV;AAAC5B,EAAA,CApCuBF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}