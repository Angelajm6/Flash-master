{"ast":null,"code":"// import React, { useState, useRef, useEffect } from 'react';\n// import FlashCardList from './FlashCardList';\n// import { QUERY_FLASHCARDS } from '../../utils/queries';\n// import { UPDATE_FLASHCARD } from '../../utils/mutations';\n// import { useQuery, useMutation } from '@apollo/client';\n// // import './FlashCard/FlashCard.css';\n\n// // import { QUERY_SINGLE_USER } from './utils/queries';\n\n// // Pass users array to the List component as a prop\n// export default function Flash() {\n//   // const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n//   // Remove (SAMPLE_FLASHCARDS) and replace with empty array\n//   const [flashcards, setFlashcards] = useState(null);\n//   const [question, setQuestion] = useState('');\n//   const [answer, setAnswer] = useState('');\n\n//   const { loading, error, data: queryData } = useQuery(QUERY_FLASHCARDS);\n\n//   useEffect(() => {\n//     if (queryData) {\n//       setFlashcards(queryData.cards);\n//     }\n//   }, [queryData]);\n\n//   const [addCard, { data }] = useMutation(UPDATE_FLASHCARD);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     addCard({variables: { question: question, answer: answer}});\n//     setQuestion('');\n//     setAnswer('');\n//     setFlashcards({question: setQuestion, answer: setAnswer});\n\n//   };\n\n//   const questionEl = useRef()\n//   const answerEl = useRef()\n\n//   return (\n//     <>\n\n//       <form className=\"createCard\" onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"question\">Question</label>\n//             <input type=\"text\" \n//             value={question}\n//             id=\"question\" ref={questionEl}\n//             onChange={(e) => setQuestion(e.target.value)} >\n//             </input>\n//           <label htmlFor=\"answer\">Answer</label>\n//           <input type=\"text\"\n//           value={answer}\n//           id=\"answer\" ref={answerEl}>\n//             onChange={(e) => setAnswer(e.target.value)} \n//           </input>\n//         </div>\n//         <div className=\"form-group\">\n//           <button className=\"btn\">Create</button>\n//         </div>\n//       </form>\n//       <div className=\"container\">\n//         {loading && <p>Loading...</p>}\n//         {error && <p>Error :(</p>}\n//         {data && data.Flash.flashCard.map(flashCard => (\n//           <FlashCardList key={Flash.id} flashCard={flashCard} />\n//           ))} \n//           <FlashCardList flashcards={flashcards}/>\n\n//       </div>\n//     </>\n//   );\n// }\n\n// // const SAMPLE_FLASHCARDS = [\n// //   {\n// //     id: 1,\n// //     question: \"What's Q1?\",\n// //     answer: 'A1'\n// //   },\n// //   {\n// //     id: 2,\n// //     question: 'Question 2?',\n// //     answer: 'Answer 2'\n// //   },\n// //   {\n// //     id: 3,\n// //     question: 'Q3?',\n// //     answer: 'Answer 3'\n// //   }\n// // ];","map":{"version":3,"names":[],"sources":["/Users/community/Flash-master/flashmaster-app/client/src/components/FlashCard/index.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import FlashCardList from './FlashCardList';\n// import { QUERY_FLASHCARDS } from '../../utils/queries';\n// import { UPDATE_FLASHCARD } from '../../utils/mutations';\n// import { useQuery, useMutation } from '@apollo/client';\n// // import './FlashCard/FlashCard.css';\n\n\n// // import { QUERY_SINGLE_USER } from './utils/queries';\n\n\n// // Pass users array to the List component as a prop\n// export default function Flash() {\n//   // const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n//   // Remove (SAMPLE_FLASHCARDS) and replace with empty array\n//   const [flashcards, setFlashcards] = useState(null);\n//   const [question, setQuestion] = useState('');\n//   const [answer, setAnswer] = useState('');\n\n\n//   const { loading, error, data: queryData } = useQuery(QUERY_FLASHCARDS);\n\n\n//   useEffect(() => {\n//     if (queryData) {\n//       setFlashcards(queryData.cards);\n//     }\n//   }, [queryData]);\n\n//   const [addCard, { data }] = useMutation(UPDATE_FLASHCARD);\n\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     addCard({variables: { question: question, answer: answer}});\n//     setQuestion('');\n//     setAnswer('');\n//     setFlashcards({question: setQuestion, answer: setAnswer});\n    \n//   };\n \n//   const questionEl = useRef()\n//   const answerEl = useRef()\n\n \n    \n//   return (\n//     <>\n\n//       <form className=\"createCard\" onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"question\">Question</label>\n//             <input type=\"text\" \n//             value={question}\n//             id=\"question\" ref={questionEl}\n//             onChange={(e) => setQuestion(e.target.value)} >\n//             </input>\n//           <label htmlFor=\"answer\">Answer</label>\n//           <input type=\"text\"\n//           value={answer}\n//           id=\"answer\" ref={answerEl}>\n//             onChange={(e) => setAnswer(e.target.value)} \n//           </input>\n//         </div>\n//         <div className=\"form-group\">\n//           <button className=\"btn\">Create</button>\n//         </div>\n//       </form>\n//       <div className=\"container\">\n//         {loading && <p>Loading...</p>}\n//         {error && <p>Error :(</p>}\n//         {data && data.Flash.flashCard.map(flashCard => (\n//           <FlashCardList key={Flash.id} flashCard={flashCard} />\n//           ))} \n//           <FlashCardList flashcards={flashcards}/>\n        \n//       </div>\n//     </>\n//   );\n// }\n\n// // const SAMPLE_FLASHCARDS = [\n// //   {\n// //     id: 1,\n// //     question: \"What's Q1?\",\n// //     answer: 'A1'\n// //   },\n// //   {\n// //     id: 2,\n// //     question: 'Question 2?',\n// //     answer: 'Answer 2'\n// //   },\n// //   {\n// //     id: 3,\n// //     question: 'Q3?',\n// //     answer: 'Answer 3'\n// //   }\n// // ];\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}